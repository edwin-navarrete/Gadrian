//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using System;
using System.Collections.Generic;

namespace AssemblyCSharpEditor
{
	[TestFixture()]
	public class PersonalityModelTest
	{
		[Test()]
		public void SingleFactorPersonalityModel ()
		{
			HashSet<PersonalityFactor>  factors = new HashSet<PersonalityFactor>();
			factors.Add(new EtniaFactor());
			PersonalityModel model = new PersonalityModel(factors);
			Assert.AreEqual( 3, model.PersonalityCnt );

			HashSet<Personality> personalities = new HashSet<Personality>();
			for(int i = 0; i < model.PersonalityCnt; i++ )
			{
				// All the personalities must be different
				//Assert.IsTrue( personalities.Add(model.getPersonalityTraits(i)) );
			}
		}

		[Test()]
		public void MultipleFactorPersonalityModel ()
		{
			HashSet<PersonalityFactor>  factors = new HashSet<PersonalityFactor>();

			//FIXME add three factors with different trait number 
			factors.Add(new EtniaFactor());

			PersonalityModel model = new PersonalityModel(factors);

			//FIXME set the product of sizes as the expected value in this assertion 
			Assert.AreEqual( 3, model.PersonalityCnt );

			HashSet<Personality> personalities = new HashSet<Personality>();
			for(int i = 0; i < model.PersonalityCnt; i++ )
			{
				// All the personalities must be different
				//Assert.IsTrue( personalities.Add(model.getPersonalityTraits(i)) );
			}
		}
	}
}

